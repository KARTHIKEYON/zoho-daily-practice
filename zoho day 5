1.You have given two sorted arrays arr1[] & arr2[] of distinct elements. 
The first array has one element extra added in between. Return the index of the extra element.
Note: 0-based indexing is followed.

class Solution {
    public int findExtra(int n, int arr1[], int arr2[]) {
        // add code here.
       int i=0;
       while(i<arr2.length)
       {
           if(arr1[i] != arr2[i])
           {
               return i;
            }
             i++;
       }
       return i;
    }
}

output:
Input: n = 7, arr1[] = {2,4,6,8,9,10,12}, arr2[] = {2,4,6,8,10,12}
Output: 4
Explanation: In the first array, 9 is extra added and it's index is 4.
--------------------------------------------------------------------------------------
2.Given an array arr[] of N integers, calculate the median.

NOTE: Return the floor value of the median.

class Solution
{
    public int find_median(int[] v)
    {
       Arrays.sort(v);
       int n = v.length;
       if(n%2!=0){
           return v[n/2];
       }
       else{
           int mid1=v[n/2-1];
           int mid2=v[n/2];
           return (mid1+mid2)/2;
       }

     
    }
}

output:
Input: N = 5
arr[] = 90 100 78 89 67
Output: 89
Explanation: After sorting the array 
middle element is the median 
--------------------------------------------------------------------------------------
